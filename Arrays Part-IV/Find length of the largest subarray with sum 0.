int lengthOfLongestSubarray(int arr[],int n)
{
    unordered_map<int,int>mp;
    int sum = 0, maxLen = 0; //sum , max length var 
    for(int i = 0; i<n; i++) { 
        sum+=arr[i]; //prefix Sum
        if(sum == 0) {
            maxLen = max(maxLen, i+1); // The sum == 0, and the array is 0 based indexing so we do i + 1.
        }
        else if(mp.find(sum) != mp.end()) { //if present in map
            maxLen = max(maxLen, i - mp[sum]); //reverse engineering!
        }
        if(mp.find(sum) == mp.end()){ // if the sum is not present in mp, we could have also used else here but this statement makes the purpose clear!
            mp[sum] = i; // sum : index 
        }
    }
    return maxLen;
}
